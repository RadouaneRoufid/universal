{"version":3,"file":"hapi-engine.js","sources":["../src/file-loader.ts","../src/main.ts","../hapi-engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { Request, ResponseToolkit } from 'hapi';\n\nimport { NgModuleFactory, Type, CompilerFactory, Compiler, StaticProvider } from '@angular/core';\nimport { ResourceLoader } from '@angular/compiler';\nimport {\n  INITIAL_CONFIG,\n  renderModuleFactory,\n  platformDynamicServer\n} from '@angular/platform-server';\n\nimport { FileLoader } from './file-loader';\nimport { REQUEST, RESPONSE } from '@nguniversal/hapi-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport interface NgSetupOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n}\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends NgSetupOptions {\n  req: Request;\n  res?: ResponseToolkit;\n  url?: string;\n  document?: string;\n}\n\n/**\n * This holds a cached version of each index used.\n */\nconst templateCache: { [key: string]: string } = {};\n\n/**\n * Map of Module Factories\n */\nconst factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngHapiEngine(options: RenderOptions) {\n\n  const req = options.req;\n  const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n  const compiler: Compiler = compilerFactory.createCompiler([\n    {\n      providers: [\n        { provide: ResourceLoader, useClass: FileLoader, deps: [] }\n      ]\n    }\n  ]);\n\n  if (req.raw.req.url === undefined) {\n    return Promise.reject(new Error('url is undefined'));\n  }\n\n  const protocol = req.server.info.protocol;\n  const filePath = <string> req.raw.req.url;\n  const url = `${protocol}://${req.info.host}${req.path}`;\n\n  options.providers = options.providers || [];\n\n  return new Promise((resolve, reject) => {\n    const moduleOrFactory = options.bootstrap;\n\n    if (!moduleOrFactory) {\n      return reject(new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped'));\n    }\n\n    const extraProviders = options.providers!.concat(\n      options.providers!,\n      getReqProviders(options.req),\n      [\n        {\n          provide: INITIAL_CONFIG,\n          useValue: {\n            document: options.document || getDocument(filePath),\n            url: options.url || url\n          }\n        }\n      ]);\n\n    getFactory(moduleOrFactory, compiler)\n      .then(factory => renderModuleFactory(factory, {extraProviders}))\n      .then(resolve, reject);\n  });\n}\n\n/**\n * Get a factory from a bootstrapped module/ module factory\n */\nfunction getFactory(\n  moduleOrFactory: Type<{}> | NgModuleFactory<{}>, compiler: Compiler\n): Promise<NgModuleFactory<{}>> {\n  return new Promise<NgModuleFactory<{}>>((resolve, reject) => {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      resolve(moduleOrFactory);\n      return;\n    } else {\n      let moduleFactory = factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        resolve(moduleFactory);\n        return;\n      }\n\n      // Compile the module and cache it\n      compiler.compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          factoryCacheMap.set(moduleOrFactory, factory);\n          resolve(factory);\n        }, reject);\n    }\n  });\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqProviders(req: Request): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req\n    }\n  ];\n  providers.push({\n    provide: RESPONSE,\n    useValue: req.raw.res\n  });\n  return providers;\n}\n\n/**\n * Get the document at the file path\n */\nfunction getDocument(filePath: string): string {\n  return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","fs.readFileSync"],"mappings":"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"}