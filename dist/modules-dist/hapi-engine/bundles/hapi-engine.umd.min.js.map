{"version":3,"sources":["modules/hapi-engine/hapi-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","hapiEngine","fs","ng","core","compiler","platformServer","tokens","this","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","buffer","toString","templateCache","factoryCacheMap","Map","getDocument","filePath","readFileSync","ngHapiEngine","options","req","compiler$1","platformDynamicServer","injector","CompilerFactory","createCompiler","providers","provide","ResourceLoader","useClass","deps","undefined","raw","Error","server","info","protocol","host","path","moduleOrFactory","bootstrap","extraProviders","concat","getReqProviders","REQUEST","useValue","push","RESPONSE","res","INITIAL_CONFIG","document","getFactory","NgModuleFactory","moduleFactory","compileModuleAsync","then","set","renderModuleFactory","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('fs'), require('@angular/core'), require('@angular/compiler'), require('@angular/platform-server'), require('@nguniversal/hapi-engine/tokens')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/hapi-engine', ['exports', 'fs', '@angular/core', '@angular/compiler', '@angular/platform-server', '@nguniversal/hapi-engine/tokens'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.hapiEngine = {}), global.fs, global.ng.core, global.ng.compiler, global.ng.platformServer, global.nguniversal.hapiEngine.tokens));\n}(this, function (exports, fs, core, compiler, platformServer, tokens) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FileLoader = /** @class */ (function () {\n        function FileLoader() {\n        }\n        FileLoader.prototype.get = function (url) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile(url, function (err, buffer) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(buffer.toString());\n                });\n            });\n        };\n        return FileLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This holds a cached version of each index used.\n     */\n    var templateCache = {};\n    /**\n     * Map of Module Factories\n     */\n    var factoryCacheMap = new Map();\n    /**\n     * This is an express engine for handling Angular Applications\n     */\n    function ngHapiEngine(options) {\n        var req = options.req;\n        var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n        var compiler$1 = compilerFactory.createCompiler([\n            {\n                providers: [\n                    { provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }\n                ]\n            }\n        ]);\n        if (req.raw.req.url === undefined) {\n            return Promise.reject(new Error('url is undefined'));\n        }\n        var protocol = req.server.info.protocol;\n        var filePath = req.raw.req.url;\n        var url = protocol + \"://\" + req.info.host + req.path;\n        options.providers = options.providers || [];\n        return new Promise(function (resolve, reject) {\n            var moduleOrFactory = options.bootstrap;\n            if (!moduleOrFactory) {\n                return reject(new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped'));\n            }\n            var extraProviders = options.providers.concat(options.providers, getReqProviders(options.req), [\n                {\n                    provide: platformServer.INITIAL_CONFIG,\n                    useValue: {\n                        document: options.document || getDocument(filePath),\n                        url: options.url || url\n                    }\n                }\n            ]);\n            getFactory(moduleOrFactory, compiler$1)\n                .then(function (factory) { return platformServer.renderModuleFactory(factory, { extraProviders: extraProviders }); })\n                .then(resolve, reject);\n        });\n    }\n    /**\n     * Get a factory from a bootstrapped module/ module factory\n     */\n    function getFactory(moduleOrFactory, compiler) {\n        return new Promise(function (resolve, reject) {\n            // If module has been compiled AoT\n            if (moduleOrFactory instanceof core.NgModuleFactory) {\n                resolve(moduleOrFactory);\n                return;\n            }\n            else {\n                var moduleFactory = factoryCacheMap.get(moduleOrFactory);\n                // If module factory is cached\n                if (moduleFactory) {\n                    resolve(moduleFactory);\n                    return;\n                }\n                // Compile the module and cache it\n                compiler.compileModuleAsync(moduleOrFactory)\n                    .then(function (factory) {\n                    factoryCacheMap.set(moduleOrFactory, factory);\n                    resolve(factory);\n                }, reject);\n            }\n        });\n    }\n    /**\n     * Get providers of the request and response\n     */\n    function getReqProviders(req) {\n        var providers = [\n            {\n                provide: tokens.REQUEST,\n                useValue: req\n            }\n        ];\n        providers.push({\n            provide: tokens.RESPONSE,\n            useValue: req.raw.res\n        });\n        return providers;\n    }\n    /**\n     * Get the document at the file path\n     */\n    function getDocument(filePath) {\n        return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ngHapiEngine = ngHapiEngine;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=hapi-engine.umd.js.map\n"]}