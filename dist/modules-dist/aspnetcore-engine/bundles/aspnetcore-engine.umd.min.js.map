{"version":3,"sources":["modules/aspnetcore-engine/aspnetcore-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","aspnetcoreEngine","ng","core","platformServer","common","compiler","tokens","fs","tslib","platformBrowser","rxjs","operators","this","tslib_1","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","buffer","toString","appSelector","factoryCacheMap","Map","ngAspnetCoreEngine","options","Error","substring","indexOf","compiler$1","platformDynamicServer","injector","CompilerFactory","createCompiler","providers","provide","ResourceLoader","useClass","deps","moduleOrFactory","ngModule","extraProviders_1","concat","getReqResProviders","origin","request","ORIGIN_URL","useValue","REQUEST","data","getFactory","NgModuleFactory","moduleFactory","compileModuleAsync","then","set","renderModuleFactory","platform","_getPlatform","platformFactory","INITIAL_CONFIG","document","extraProviders","_render","moduleRefPromise","moduleRef","ɵTRANSITION_ID","ApplicationRef","isStable","pipe","filter","take","toPromise","e_1","_a","platformState","PlatformState","callbacks","BEFORE_APP_SERIALIZED","callbacks_1","__values","callbacks_1_1","next","done","callback","value","e","console","warn","e_1_1","error","return","call","output","renderToString","destroy","html","bootstrapModuleFactory","absoluteUrl","result","universalData","_getUniversalData","doc","STYLES","SCRIPTS","META","LINKS","i","head","children","length","element","tagName","toUpperCase","push","outerHTML","body","title","appNode","querySelector","scripts","join","styles","meta","links","DOCUMENT","globals","ex","createTransferScript","transferData","JSON","stringify","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-server'), require('@angular/common'), require('@angular/compiler'), require('@nguniversal/aspnetcore-engine/tokens'), require('fs'), require('tslib'), require('@angular/platform-browser'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/aspnetcore-engine', ['exports', '@angular/core', '@angular/platform-server', '@angular/common', '@angular/compiler', '@nguniversal/aspnetcore-engine/tokens', 'fs', 'tslib', '@angular/platform-browser', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.aspnetcoreEngine = {}), global.ng.core, global.ng.platformServer, global.ng.common, global.ng.compiler, global.nguniversal.aspnetcoreEngine.tokens, global.fs, global.tslib, global.ng.platformBrowser, global.rxjs.operators));\n}(this, function (exports, core, platformServer, common, compiler, tokens, fs, tslib_1, platformBrowser, operators) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FileLoader = /** @class */ (function () {\n        function FileLoader() {\n        }\n        FileLoader.prototype.get = function (url) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile(url, function (err, buffer) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(buffer.toString());\n                });\n            });\n        };\n        return FileLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _getPlatform(platformFactory, options) {\n        var extraProviders = options.extraProviders ? options.extraProviders : [];\n        return platformFactory([\n            { provide: platformServer.INITIAL_CONFIG, useValue: { document: options.document, url: options.url } },\n            extraProviders\n        ]);\n    }\n    function _render(platform, moduleRefPromise) {\n        return moduleRefPromise.then(function (moduleRef) {\n            var transitionId = moduleRef.injector.get(platformBrowser.ɵTRANSITION_ID, null);\n            if (!transitionId) {\n                throw new Error(\"renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\\n  the server-rendered app can be properly bootstrapped into a client app.\");\n            }\n            var applicationRef = moduleRef.injector.get(core.ApplicationRef);\n            return applicationRef.isStable\n                .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n                .then(function () {\n                var e_1, _a;\n                var platformState = platform.injector.get(platformServer.PlatformState);\n                // Run any BEFORE_APP_SERIALIZED callbacks just before rendering to string.\n                var callbacks = moduleRef.injector.get(platformServer.BEFORE_APP_SERIALIZED, null);\n                if (callbacks) {\n                    try {\n                        for (var callbacks_1 = tslib_1.__values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\n                            var callback = callbacks_1_1.value;\n                            try {\n                                callback();\n                            }\n                            catch (e) {\n                                // Ignore exceptions.\n                                console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', e);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                var output = platformState.renderToString();\n                platform.destroy();\n                return { html: output, moduleRef: moduleRef };\n            });\n        });\n    }\n    /**\n     * Renders a {@link NgModuleFactory} to string.\n     *\n     * `document` is the full document HTML of the page to render, as a string.\n     * `url` is the URL for the current render request.\n     * `extraProviders` are the platform level providers for the current render request.\n     *\n     * @experimental\n     */\n    function renderModuleFactory(moduleFactory, options) {\n        var platform = _getPlatform(platformServer.platformServer, options);\n        return _render(platform, platform.bootstrapModuleFactory(moduleFactory));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /* @internal */\n    var appSelector = 'app-root'; // default\n    /* @internal */\n    function _getUniversalData(doc) {\n        var STYLES = [];\n        var SCRIPTS = [];\n        var META = [];\n        var LINKS = [];\n        for (var i = 0; i < doc.head.children.length; i++) {\n            var element = doc.head.children[i];\n            var tagName = element.tagName.toUpperCase();\n            switch (tagName) {\n                case 'SCRIPT':\n                    SCRIPTS.push(element.outerHTML);\n                    break;\n                case 'STYLE':\n                    STYLES.push(element.outerHTML);\n                    break;\n                case 'LINK':\n                    LINKS.push(element.outerHTML);\n                    break;\n                case 'META':\n                    META.push(element.outerHTML);\n                    break;\n                default:\n                    break;\n            }\n        }\n        for (var i = 0; i < doc.body.children.length; i++) {\n            var element = doc.body.children[i];\n            var tagName = element.tagName.toUpperCase();\n            switch (tagName) {\n                case 'SCRIPT':\n                    SCRIPTS.push(element.outerHTML);\n                    break;\n                case 'STYLE':\n                    STYLES.push(element.outerHTML);\n                    break;\n                case 'LINK':\n                    LINKS.push(element.outerHTML);\n                    break;\n                case 'META':\n                    META.push(element.outerHTML);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return {\n            title: doc.title,\n            appNode: doc.querySelector(appSelector).outerHTML,\n            scripts: SCRIPTS.join('\\n'),\n            styles: STYLES.join('\\n'),\n            meta: META.join('\\n'),\n            links: LINKS.join('\\n')\n        };\n    }\n    function ngAspnetCoreEngine(options) {\n        if (!options.appSelector) {\n            var selector = \"\\\" appSelector: '<\" + appSelector + \"></\" + appSelector + \">' \\\"\";\n            throw new Error(\"appSelector is required! Pass in \" + selector + \",\\n     for your root App component.\");\n        }\n        // Grab the DOM \"selector\" from the passed in Template <app-root> for example = \"app-root\"\n        appSelector = options.appSelector.substring(1, options.appSelector.indexOf('>'));\n        var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n        var compiler$1 = compilerFactory.createCompiler([\n            {\n                providers: [\n                    { provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }\n                ]\n            }\n        ]);\n        return new Promise(function (resolve, reject) {\n            try {\n                var moduleOrFactory = options.ngModule;\n                if (!moduleOrFactory) {\n                    throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n                }\n                options.providers = options.providers || [];\n                var extraProviders_1 = options.providers.concat(getReqResProviders(options.request.origin, options.request.data.request));\n                getFactory(moduleOrFactory, compiler$1)\n                    .then(function (factory) {\n                    return renderModuleFactory(factory, {\n                        document: options.document || options.appSelector,\n                        url: options.url || options.request.absoluteUrl,\n                        extraProviders: extraProviders_1\n                    });\n                })\n                    .then(function (result) {\n                    var doc = result.moduleRef.injector.get(common.DOCUMENT);\n                    var universalData = _getUniversalData(doc);\n                    resolve({\n                        html: universalData.appNode,\n                        moduleRef: result.moduleRef,\n                        globals: {\n                            styles: universalData.styles,\n                            title: universalData.title,\n                            scripts: universalData.scripts,\n                            meta: universalData.meta,\n                            links: universalData.links\n                        }\n                    });\n                }, function (err) {\n                    reject(err);\n                });\n            }\n            catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n    /**\n     * Get providers of the request and response\n     */\n    function getReqResProviders(origin, request) {\n        var providers = [\n            {\n                provide: tokens.ORIGIN_URL,\n                useValue: origin\n            },\n            {\n                provide: tokens.REQUEST,\n                useValue: request\n            }\n        ];\n        return providers;\n    }\n    /* @internal */\n    var factoryCacheMap = new Map();\n    function getFactory(moduleOrFactory, compiler) {\n        return new Promise(function (resolve, reject) {\n            // If module has been compiled AoT\n            if (moduleOrFactory instanceof core.NgModuleFactory) {\n                resolve(moduleOrFactory);\n                return;\n            }\n            else {\n                var moduleFactory = factoryCacheMap.get(moduleOrFactory);\n                // If module factory is cached\n                if (moduleFactory) {\n                    resolve(moduleFactory);\n                    return;\n                }\n                // Compile the module and cache it\n                compiler.compileModuleAsync(moduleOrFactory)\n                    .then(function (factory) {\n                    factoryCacheMap.set(moduleOrFactory, factory);\n                    resolve(factory);\n                }, (function (err) {\n                    reject(err);\n                }));\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createTransferScript(transferData) {\n        return \"<script>window['TRANSFER_CACHE'] = \" + JSON.stringify(transferData) + \";</script>\";\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ngAspnetCoreEngine = ngAspnetCoreEngine;\n    exports.createTransferScript = createTransferScript;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=aspnetcore-engine.umd.js.map\n"]}