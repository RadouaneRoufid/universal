{"version":3,"file":"aspnetcore-engine.umd.js","sources":["../../../../../modules/aspnetcore-engine/src/file-loader.ts","../../../../../modules/aspnetcore-engine/src/platform-server-utils.ts","../../../../../modules/aspnetcore-engine/src/main.ts","../../../../../modules/aspnetcore-engine/src/create-transfer-script.ts","../../../../../modules/aspnetcore-engine/public_api.ts","../../../../../modules/aspnetcore-engine/index.ts","../../../../../modules/aspnetcore-engine/aspnetcore-engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Copied from @angular/platform-server utils:\n * https://github.com/angular/angular/blob/master/packages/platform-server/src/utils.ts\n * Github issue to avoid copy/paste:\n * https://github.com/angular/angular/issues/22049#issuecomment-363638743\n */\n\nimport {\n  ApplicationRef,\n  NgModuleFactory,\n  NgModuleRef,\n  PlatformRef,\n  StaticProvider,\n  Type\n} from '@angular/core';\nimport {ÉµTRANSITION_ID} from '@angular/platform-browser';\nimport {\n  platformDynamicServer,\n  platformServer,\n  BEFORE_APP_SERIALIZED,\n  INITIAL_CONFIG,\n  PlatformState\n} from '@angular/platform-server';\nimport {filter, take} from 'rxjs/operators';\n\ninterface PlatformOptions {\n  document?: string;\n  url?: string;\n  extraProviders?: StaticProvider[];\n}\n\nexport interface ModuleRenderResult<T> {\n  html: string;\n  moduleRef: NgModuleRef<T>;\n}\n\nfunction _getPlatform(\n  platformFactory: (extraProviders: StaticProvider[]) => PlatformRef,\n  options: PlatformOptions): PlatformRef {\n  const extraProviders = options.extraProviders ? options.extraProviders : [];\n  return platformFactory([\n    { provide: INITIAL_CONFIG, useValue: { document: options.document, url: options.url } },\n    extraProviders\n  ]);\n}\n\nfunction _render<T>(platform: PlatformRef,\n                    moduleRefPromise: Promise<NgModuleRef<T>>): Promise<ModuleRenderResult<T>> {\n  return moduleRefPromise.then(moduleRef => {\n    const transitionId = moduleRef.injector.get(ÉµTRANSITION_ID, null);\n    if (!transitionId) {\n      throw new Error(\n        `renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\n  the server-rendered app can be properly bootstrapped into a client app.`);\n    }\n    const applicationRef: ApplicationRef = moduleRef.injector.get(ApplicationRef);\n    return applicationRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => {\n        const platformState = platform.injector.get(PlatformState);\n\n        // Run any BEFORE_APP_SERIALIZED callbacks just before rendering to string.\n        const callbacks = moduleRef.injector.get(BEFORE_APP_SERIALIZED, null);\n        if (callbacks) {\n          for (const callback of callbacks) {\n            try {\n              callback();\n            } catch (e) {\n              // Ignore exceptions.\n              console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', e);\n            }\n          }\n        }\n\n        const output = platformState.renderToString();\n        platform.destroy();\n        return { html: output, moduleRef };\n      });\n  });\n}\n\n/**\n * Renders a Module to string.\n *\n * `document` is the full document HTML of the page to render, as a string.\n * `url` is the URL for the current render request.\n * `extraProviders` are the platform level providers for the current render request.\n *\n * Do not use this in a production server environment. Use pre-compiled {@link NgModuleFactory} with\n * {@link renderModuleFactory} instead.\n *\n * @experimental\n */\nexport function renderModule<T>(\n  module: Type<T>, options: { document?: string, url?: string, extraProviders?: StaticProvider[] }):\n  Promise<ModuleRenderResult<T>> {\n  const platform = _getPlatform(platformDynamicServer, options);\n  return _render(platform, platform.bootstrapModule(module));\n}\n\n/**\n * Renders a {@link NgModuleFactory} to string.\n *\n * `document` is the full document HTML of the page to render, as a string.\n * `url` is the URL for the current render request.\n * `extraProviders` are the platform level providers for the current render request.\n *\n * @experimental\n */\nexport function renderModuleFactory<T>(\n  moduleFactory: NgModuleFactory<T>,\n  options: { document?: string, url?: string, extraProviders?: StaticProvider[] }):\n  Promise<ModuleRenderResult<T>> {\n  const platform = _getPlatform(platformServer, options);\n  return _render(platform, platform.bootstrapModuleFactory(moduleFactory));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Type, NgModuleFactory, CompilerFactory, Compiler, StaticProvider} from '@angular/core';\nimport { platformDynamicServer } from '@angular/platform-server';\nimport { DOCUMENT } from '@angular/common';\nimport { ResourceLoader } from '@angular/compiler';\n\nimport { REQUEST, ORIGIN_URL } from '@nguniversal/aspnetcore-engine/tokens';\nimport { FileLoader } from './file-loader';\nimport { IEngineOptions } from './interfaces/engine-options';\nimport { IEngineRenderResult } from './interfaces/engine-render-result';\nimport { renderModuleFactory } from './platform-server-utils';\n\n/* @internal */\nexport class UniversalData {\n  appNode = '';\n  title = '';\n  scripts = '';\n  styles = '';\n  meta = '';\n  links = '';\n}\n\n/* @internal */\nlet appSelector = 'app-root'; // default\n\n/* @internal */\nfunction _getUniversalData(doc: Document): UniversalData {\n\n  const STYLES: string[] = [];\n  const SCRIPTS: string[] = [];\n  const META: string[] = [];\n  const LINKS: string[] = [];\n\n  for (let i = 0; i < doc.head!.children.length; i++) {\n    const element = doc.head!.children[i];\n    const tagName = element.tagName.toUpperCase();\n\n    switch (tagName) {\n      case 'SCRIPT':\n        SCRIPTS.push(element.outerHTML);\n        break;\n      case 'STYLE':\n        STYLES.push(element.outerHTML);\n        break;\n      case 'LINK':\n        LINKS.push(element.outerHTML);\n        break;\n      case 'META':\n        META.push(element.outerHTML);\n        break;\n      default:\n        break;\n    }\n  }\n\n  for (let i = 0; i < doc.body.children.length; i++) {\n    const element: Element = doc.body.children[i];\n    const tagName = element.tagName.toUpperCase();\n\n    switch (tagName) {\n      case 'SCRIPT':\n        SCRIPTS.push(element.outerHTML);\n        break;\n      case 'STYLE':\n        STYLES.push(element.outerHTML);\n        break;\n      case 'LINK':\n        LINKS.push(element.outerHTML);\n        break;\n      case 'META':\n        META.push(element.outerHTML);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return {\n    title: doc.title,\n    appNode: doc.querySelector(appSelector)!.outerHTML,\n    scripts: SCRIPTS.join('\\n'),\n    styles: STYLES.join('\\n'),\n    meta: META.join('\\n'),\n    links: LINKS.join('\\n')\n  };\n}\n\nexport function ngAspnetCoreEngine(options: IEngineOptions): Promise<IEngineRenderResult> {\n\n  if (!options.appSelector) {\n    const selector = `\" appSelector: '<${appSelector}></${appSelector}>' \"`;\n    throw new Error(`appSelector is required! Pass in ${selector},\n     for your root App component.`);\n  }\n\n  // Grab the DOM \"selector\" from the passed in Template <app-root> for example = \"app-root\"\n  appSelector = options.appSelector.substring(1, options.appSelector.indexOf('>'));\n\n  const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n  const compiler: Compiler = compilerFactory.createCompiler([\n    {\n      providers: [\n        { provide: ResourceLoader, useClass: FileLoader, deps: [] }\n      ]\n    }\n  ]);\n\n  return new Promise((resolve, reject) => {\n\n    try {\n      const moduleOrFactory = options.ngModule;\n      if (!moduleOrFactory) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      options.providers = options.providers || [];\n\n      const extraProviders = options.providers.concat(getReqResProviders(options.request.origin,\n        options.request.data.request));\n\n      getFactory(moduleOrFactory, compiler)\n        .then(factory => {\n          return renderModuleFactory(factory, {\n            document: options.document || options.appSelector,\n            url: options.url || options.request.absoluteUrl,\n            extraProviders: extraProviders\n          });\n        })\n        .then(result => {\n          const doc = result.moduleRef.injector.get(DOCUMENT);\n          const universalData = _getUniversalData(doc);\n\n          resolve({\n            html: universalData.appNode,\n            moduleRef: result.moduleRef,\n            globals: {\n              styles: universalData.styles,\n              title: universalData.title,\n              scripts: universalData.scripts,\n              meta: universalData.meta,\n              links: universalData.links\n            }\n          });\n        }, (err) => {\n          reject(err);\n        });\n\n    } catch (ex) {\n      reject(ex);\n    }\n\n  });\n\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(origin: string, request: string): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: ORIGIN_URL,\n      useValue: origin\n    },\n    {\n      provide: REQUEST,\n      useValue: request\n    }\n  ];\n  return providers;\n}\n\n/* @internal */\nconst factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\nfunction getFactory(\n  moduleOrFactory: Type<{}> | NgModuleFactory<{}>, compiler: Compiler\n): Promise<NgModuleFactory<{}>> {\n\n  return new Promise<NgModuleFactory<{}>>((resolve, reject) => {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      resolve(moduleOrFactory);\n      return;\n    } else {\n      let moduleFactory = factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        resolve(moduleFactory);\n        return;\n      }\n\n      // Compile the module and cache it\n      compiler.compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          factoryCacheMap.set(moduleOrFactory, factory);\n          resolve(factory);\n        }, (err => {\n          reject(err);\n        }));\n    }\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport function createTransferScript(transferData: Object): string {\n  return `<script>window['TRANSFER_CACHE'] = ${JSON.stringify(transferData)};</script>`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ngAspnetCoreEngine } from './src/main';\nexport { createTransferScript } from './src/create-transfer-script';\n\n\nexport { IEngineOptions } from './src/interfaces/engine-options';\nexport { IRequestParams } from './src/interfaces/request-params';\nexport { IEngineRenderResult } from './src/interfaces/engine-render-result';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","INITIAL_CONFIG","ɵTRANSITION_ID","ApplicationRef","filter","take","PlatformState","BEFORE_APP_SERIALIZED","tslib_1.__values","platformServer","platformDynamicServer","CompilerFactory","compiler","ResourceLoader","DOCUMENT","ORIGIN_URL","REQUEST","NgModuleFactory"],"mappings":"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"}