{"version":3,"file":"aspnetcore-engine.js","sources":["../src/file-loader.ts","../src/platform-server-utils.ts","../src/main.ts","../src/create-transfer-script.ts","../aspnetcore-engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Copied from @angular/platform-server utils:\n * https://github.com/angular/angular/blob/master/packages/platform-server/src/utils.ts\n * Github issue to avoid copy/paste:\n * https://github.com/angular/angular/issues/22049#issuecomment-363638743\n */\n\nimport {\n  ApplicationRef,\n  NgModuleFactory,\n  NgModuleRef,\n  PlatformRef,\n  StaticProvider,\n  Type\n} from '@angular/core';\nimport {ÉµTRANSITION_ID} from '@angular/platform-browser';\nimport {\n  platformDynamicServer,\n  platformServer,\n  BEFORE_APP_SERIALIZED,\n  INITIAL_CONFIG,\n  PlatformState\n} from '@angular/platform-server';\nimport {filter, take} from 'rxjs/operators';\n\ninterface PlatformOptions {\n  document?: string;\n  url?: string;\n  extraProviders?: StaticProvider[];\n}\n\nexport interface ModuleRenderResult<T> {\n  html: string;\n  moduleRef: NgModuleRef<T>;\n}\n\nfunction _getPlatform(\n  platformFactory: (extraProviders: StaticProvider[]) => PlatformRef,\n  options: PlatformOptions): PlatformRef {\n  const extraProviders = options.extraProviders ? options.extraProviders : [];\n  return platformFactory([\n    { provide: INITIAL_CONFIG, useValue: { document: options.document, url: options.url } },\n    extraProviders\n  ]);\n}\n\nfunction _render<T>(platform: PlatformRef,\n                    moduleRefPromise: Promise<NgModuleRef<T>>): Promise<ModuleRenderResult<T>> {\n  return moduleRefPromise.then(moduleRef => {\n    const transitionId = moduleRef.injector.get(ÉµTRANSITION_ID, null);\n    if (!transitionId) {\n      throw new Error(\n        `renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\n  the server-rendered app can be properly bootstrapped into a client app.`);\n    }\n    const applicationRef: ApplicationRef = moduleRef.injector.get(ApplicationRef);\n    return applicationRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => {\n        const platformState = platform.injector.get(PlatformState);\n\n        // Run any BEFORE_APP_SERIALIZED callbacks just before rendering to string.\n        const callbacks = moduleRef.injector.get(BEFORE_APP_SERIALIZED, null);\n        if (callbacks) {\n          for (const callback of callbacks) {\n            try {\n              callback();\n            } catch (e) {\n              // Ignore exceptions.\n              console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', e);\n            }\n          }\n        }\n\n        const output = platformState.renderToString();\n        platform.destroy();\n        return { html: output, moduleRef };\n      });\n  });\n}\n\n/**\n * Renders a Module to string.\n *\n * `document` is the full document HTML of the page to render, as a string.\n * `url` is the URL for the current render request.\n * `extraProviders` are the platform level providers for the current render request.\n *\n * Do not use this in a production server environment. Use pre-compiled {@link NgModuleFactory} with\n * {@link renderModuleFactory} instead.\n *\n * @experimental\n */\nexport function renderModule<T>(\n  module: Type<T>, options: { document?: string, url?: string, extraProviders?: StaticProvider[] }):\n  Promise<ModuleRenderResult<T>> {\n  const platform = _getPlatform(platformDynamicServer, options);\n  return _render(platform, platform.bootstrapModule(module));\n}\n\n/**\n * Renders a {@link NgModuleFactory} to string.\n *\n * `document` is the full document HTML of the page to render, as a string.\n * `url` is the URL for the current render request.\n * `extraProviders` are the platform level providers for the current render request.\n *\n * @experimental\n */\nexport function renderModuleFactory<T>(\n  moduleFactory: NgModuleFactory<T>,\n  options: { document?: string, url?: string, extraProviders?: StaticProvider[] }):\n  Promise<ModuleRenderResult<T>> {\n  const platform = _getPlatform(platformServer, options);\n  return _render(platform, platform.bootstrapModuleFactory(moduleFactory));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Type, NgModuleFactory, CompilerFactory, Compiler, StaticProvider} from '@angular/core';\nimport { platformDynamicServer } from '@angular/platform-server';\nimport { DOCUMENT } from '@angular/common';\nimport { ResourceLoader } from '@angular/compiler';\n\nimport { REQUEST, ORIGIN_URL } from '@nguniversal/aspnetcore-engine/tokens';\nimport { FileLoader } from './file-loader';\nimport { IEngineOptions } from './interfaces/engine-options';\nimport { IEngineRenderResult } from './interfaces/engine-render-result';\nimport { renderModuleFactory } from './platform-server-utils';\n\n/* @internal */\nexport class UniversalData {\n  appNode = '';\n  title = '';\n  scripts = '';\n  styles = '';\n  meta = '';\n  links = '';\n}\n\n/* @internal */\nlet appSelector = 'app-root'; // default\n\n/* @internal */\nfunction _getUniversalData(doc: Document): UniversalData {\n\n  const STYLES: string[] = [];\n  const SCRIPTS: string[] = [];\n  const META: string[] = [];\n  const LINKS: string[] = [];\n\n  for (let i = 0; i < doc.head!.children.length; i++) {\n    const element = doc.head!.children[i];\n    const tagName = element.tagName.toUpperCase();\n\n    switch (tagName) {\n      case 'SCRIPT':\n        SCRIPTS.push(element.outerHTML);\n        break;\n      case 'STYLE':\n        STYLES.push(element.outerHTML);\n        break;\n      case 'LINK':\n        LINKS.push(element.outerHTML);\n        break;\n      case 'META':\n        META.push(element.outerHTML);\n        break;\n      default:\n        break;\n    }\n  }\n\n  for (let i = 0; i < doc.body.children.length; i++) {\n    const element: Element = doc.body.children[i];\n    const tagName = element.tagName.toUpperCase();\n\n    switch (tagName) {\n      case 'SCRIPT':\n        SCRIPTS.push(element.outerHTML);\n        break;\n      case 'STYLE':\n        STYLES.push(element.outerHTML);\n        break;\n      case 'LINK':\n        LINKS.push(element.outerHTML);\n        break;\n      case 'META':\n        META.push(element.outerHTML);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return {\n    title: doc.title,\n    appNode: doc.querySelector(appSelector)!.outerHTML,\n    scripts: SCRIPTS.join('\\n'),\n    styles: STYLES.join('\\n'),\n    meta: META.join('\\n'),\n    links: LINKS.join('\\n')\n  };\n}\n\nexport function ngAspnetCoreEngine(options: IEngineOptions): Promise<IEngineRenderResult> {\n\n  if (!options.appSelector) {\n    const selector = `\" appSelector: '<${appSelector}></${appSelector}>' \"`;\n    throw new Error(`appSelector is required! Pass in ${selector},\n     for your root App component.`);\n  }\n\n  // Grab the DOM \"selector\" from the passed in Template <app-root> for example = \"app-root\"\n  appSelector = options.appSelector.substring(1, options.appSelector.indexOf('>'));\n\n  const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n  const compiler: Compiler = compilerFactory.createCompiler([\n    {\n      providers: [\n        { provide: ResourceLoader, useClass: FileLoader, deps: [] }\n      ]\n    }\n  ]);\n\n  return new Promise((resolve, reject) => {\n\n    try {\n      const moduleOrFactory = options.ngModule;\n      if (!moduleOrFactory) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      options.providers = options.providers || [];\n\n      const extraProviders = options.providers.concat(getReqResProviders(options.request.origin,\n        options.request.data.request));\n\n      getFactory(moduleOrFactory, compiler)\n        .then(factory => {\n          return renderModuleFactory(factory, {\n            document: options.document || options.appSelector,\n            url: options.url || options.request.absoluteUrl,\n            extraProviders: extraProviders\n          });\n        })\n        .then(result => {\n          const doc = result.moduleRef.injector.get(DOCUMENT);\n          const universalData = _getUniversalData(doc);\n\n          resolve({\n            html: universalData.appNode,\n            moduleRef: result.moduleRef,\n            globals: {\n              styles: universalData.styles,\n              title: universalData.title,\n              scripts: universalData.scripts,\n              meta: universalData.meta,\n              links: universalData.links\n            }\n          });\n        }, (err) => {\n          reject(err);\n        });\n\n    } catch (ex) {\n      reject(ex);\n    }\n\n  });\n\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(origin: string, request: string): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: ORIGIN_URL,\n      useValue: origin\n    },\n    {\n      provide: REQUEST,\n      useValue: request\n    }\n  ];\n  return providers;\n}\n\n/* @internal */\nconst factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\nfunction getFactory(\n  moduleOrFactory: Type<{}> | NgModuleFactory<{}>, compiler: Compiler\n): Promise<NgModuleFactory<{}>> {\n\n  return new Promise<NgModuleFactory<{}>>((resolve, reject) => {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      resolve(moduleOrFactory);\n      return;\n    } else {\n      let moduleFactory = factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        resolve(moduleFactory);\n        return;\n      }\n\n      // Compile the module and cache it\n      compiler.compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          factoryCacheMap.set(moduleOrFactory, factory);\n          resolve(factory);\n        }, (err => {\n          reject(err);\n        }));\n    }\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport function createTransferScript(transferData: Object): string {\n  return `<script>window['TRANSFER_CACHE'] = ${JSON.stringify(transferData)};</script>`;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile"],"mappings":"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"}