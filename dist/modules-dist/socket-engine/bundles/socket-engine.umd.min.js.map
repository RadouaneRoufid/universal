{"version":3,"sources":["modules/socket-engine/socket-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","socketEngine","tslib","fs","ng","compiler","core","platformServer","net","this","tslib_1","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","buffer","toString","SERVER_CONTEXT","InjectionToken","CommonEngine","moduleOrFactory","providers","factoryCacheMap","Map","templateCache","getCompiler","platformDynamicServer","injector","CompilerFactory","createCompiler","provide","ResourceLoader","useClass","deps","render","opts","__awaiter","doc","_a","extraProviders","__generator","_b","label","document","getDocument","documentFilePath","sent","__spread","useValue","JSON","parse","context","INITIAL_CONFIG","getFactory","renderModuleFactory","_this","NgModuleFactory","moduleFactory","compileModuleAsync","then","set","filePath","readFileSync","startSocketEngine","host","port","_reject","engine","server","createServer","socket","on","buff","message","renderOptions","html","error_1","trys","push","write","stringify","id","error","listen","close","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,MAAOA,QAAQ,qBAAsBA,QAAQ,iBAAkBA,QAAQ,4BAA6BA,QAAQ,QACpM,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,6BAA8B,CAAC,UAAW,QAAS,KAAM,oBAAqB,gBAAiB,2BAA4B,OAAQJ,GAC7JA,IAAzBD,EAASA,GAAUO,MAAsBC,YAAcR,EAAOQ,aAAe,GAAIR,EAAOQ,YAAYC,aAAe,IAAKT,EAAOU,MAAOV,EAAOW,GAAIX,EAAOY,GAAGC,SAAUb,EAAOY,GAAGE,KAAMd,EAAOY,GAAGG,eAAgBf,EAAOgB,KAH3N,CAIEC,KAAM,SAAUf,EAASgB,EAASP,EAAIE,EAAUC,EAAMC,EAAgBC,GAAO;;;;;;;OAU3E,IAAIG,EAA4B,WAC5B,SAASA,KAYT,OAVAA,EAAWC,UAAUC,IAAM,SAAUC,GACjC,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAClCd,EAAGe,SAASJ,EAAK,SAAUK,EAAKC,GAC5B,GAAID,EACA,OAAOF,EAAOE,GAElBH,EAAQI,EAAOC,iBAIpBV,EAboB,GAgB3BW,EAAiB,IAAIhB,EAAKiB,eAAe,kBAMzCC,EAA8B,WAC9B,SAASA,EAAaC,EAAiBC,QACjB,IAAdA,IAAwBA,EAAY,IACxCjB,KAAKgB,gBAAkBA,EACvBhB,KAAKiB,UAAYA,EACjBjB,KAAKkB,gBAAkB,IAAIC,IAC3BnB,KAAKoB,cAAgB,GA2EzB,OAxEAL,EAAaZ,UAAUkB,YAAc,WAEjC,OADsBvB,EAAewB,wBAAwBC,SAASnB,IAAIP,EAAK2B,iBACxDC,eAAe,CAClC,CAAER,UAAW,CAAC,CAAES,QAAS9B,EAAS+B,eAAgBC,SAAU1B,EAAY2B,KAAM,SAOtFd,EAAaZ,UAAU2B,OAAS,SAAUC,GACtC,OAAO9B,EAAQ+B,UAAUhC,UAAM,OAAQ,EAAQ,WAC3C,IAAIiC,EAAKC,EAAIC,EAAgBnD,EAC7B,OAAOiB,EAAQmC,YAAYpC,KAAM,SAAUqC,GACvC,OAAQA,EAAGC,OACP,KAAK,EAED,OADAJ,EAAKH,EAAKQ,UACK,CAAC,EAAa,GACtB,CAAC,EAAavC,KAAKwC,YAAYT,EAAKU,mBAC/C,KAAK,EACDP,EAAMG,EAAGK,OACTL,EAAGC,MAAQ,EACf,KAAK,EAYD,OAXAL,EAAMC,EACNC,EAAiBlC,EAAQ0C,SAAUZ,EAAKd,WAAa,GAAMjB,KAAKiB,WAAa,GAAK,CAC9E,CAAES,QAASb,EAAgB+B,SAAUC,KAAKC,MAAMf,EAAKgB,UACrD,CACIrB,QAAS5B,EAAekD,eACxBJ,SAAU,CACNL,SAAUN,EACV5B,IAAK0B,EAAK1B,QAIf,CAAC,EAAaL,KAAKiD,cAC9B,KAAK,EAED,OADAjE,EAAUqD,EAAGK,OACN,CAAC,EAAc5C,EAAeoD,oBAAoBlE,EAAS,CAAEmD,eAAgBA,WAMxGpB,EAAaZ,UAAU8C,WAAa,WAChC,IAAIE,EAAQnD,KAERgB,EAAkBhB,KAAKgB,gBAC3B,GAAIA,aAA2BnB,EAAKuD,gBAChC,OAAO9C,QAAQC,QAAQS,GAIvB,IAAIqC,EAAgBrD,KAAKkB,gBAAgBd,IAAIY,GAE7C,OAAIqC,EACO/C,QAAQC,QAAQ8C,GAGpBrD,KAAKqB,cAAciC,mBAAmBtC,GACxCuC,KAAK,SAAUvE,GAEhB,OADAmE,EAAMjC,gBAAgBsC,IAAIxC,EAAiBhC,GACpCA,KAKnB+B,EAAaZ,UAAUqC,YAAc,SAAUiB,GAC3C,IAAIxB,EAAMjC,KAAKoB,cAAcqC,GAAYzD,KAAKoB,cAAcqC,IACxD/D,EAAGgE,aAAaD,GAAU7C,WAE9B,OAAON,QAAQC,QAAQ0B,IAEpBlB,EAjFsB;;;;;;;;;;;;;;;AAuKjC9B,EAAQ0E;;;;;;;;;;;;;;;;;;;;;;AA3DR,SAASA,EAAkB3C,EAAiBC,EAAW2C,EAAMC,GACzD,IAAIV,EAAQnD,KAIZ,YAHkB,IAAdiB,IAAwBA,EAAY,SAC3B,IAAT2C,IAAmBA,EAAO,kBACjB,IAATC,IAAmBA,EAAO,MACvB,IAAIvD,QAAQ,SAAUC,EAASuD,GAClC,IAAIC,EAAS,IAAIhD,EAAaC,EAAiBC,GAC3C+C,EAASjE,EAAIkE,aAAa,SAAUC,GACpCA,EAAOC,GAAG,OAAQ,SAAUC,GAAQ,OAAOnE,EAAQ+B,UAAUmB,OAAO,OAAQ,EAAQ,WAChF,IAAIkB,EAASC,EAAeC,EAAMC,EAClC,OAAOvE,EAAQmC,YAAYpC,KAAM,SAAUkC,GACvC,OAAQA,EAAGI,OACP,KAAK,EACD+B,EAAUD,EAAKxD,WACf0D,EAAgBzB,KAAKC,MAAMuB,GAC3BnC,EAAGI,MAAQ,EACf,KAAK,EAED,OADAJ,EAAGuC,KAAKC,KAAK,CAAC,EAAG,EAAG,CAAE,IACf,CAAC,EAAaX,EAAOjC,OAAOwC,IACvC,KAAK,EAGD,OAFAC,EAAOrC,EAAGQ,OACVwB,EAAOS,MAAM9B,KAAK+B,UAAU,CAAEL,KAAMA,EAAMM,GAAIP,EAAcO,MACrD,CAAC,EAAa,GACzB,KAAK,EAKD,OAJAL,EAAUtC,EAAGQ,OAEbwB,EAAOS,MAAM9B,KAAK+B,UAAU,CAAEL,KAAM,KAChCM,GAAIP,EAAcO,GAAIC,MAAON,EAAQ5D,cAClC,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,YAKhCoD,EAAOe,OAAOlB,EAAMD,GACpBrD,EAAQ,CAAEyE,MAAO,WAAc,OAAOhB,EAAOgB,cA0BrDC,OAAOC,eAAejG,EAAS,aAAc,CAAEkG,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('fs'), require('@angular/compiler'), require('@angular/core'), require('@angular/platform-server'), require('net')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/socket-engine', ['exports', 'tslib', 'fs', '@angular/compiler', '@angular/core', '@angular/platform-server', 'net'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.socketEngine = {}), global.tslib, global.fs, global.ng.compiler, global.ng.core, global.ng.platformServer, global.net));\n}(this, function (exports, tslib_1, fs, compiler, core, platformServer, net) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** ResourceLoader implementation for loading files */\n    var FileLoader = /** @class */ (function () {\n        function FileLoader() {\n        }\n        FileLoader.prototype.get = function (url) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile(url, function (err, buffer) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(buffer.toString());\n                });\n            });\n        };\n        return FileLoader;\n    }());\n\n    var SERVER_CONTEXT = new core.InjectionToken('SERVER_CONTEXT');\n    /**\n     * A common rendering engine utility. This abstracts the logic\n     * for handling the platformServer compiler, the module cache, and\n     * the document loader\n     */\n    var CommonEngine = /** @class */ (function () {\n        function CommonEngine(moduleOrFactory, providers) {\n            if (providers === void 0) { providers = []; }\n            this.moduleOrFactory = moduleOrFactory;\n            this.providers = providers;\n            this.factoryCacheMap = new Map();\n            this.templateCache = {};\n        }\n        /** Return an instance of the platformServer compiler */\n        CommonEngine.prototype.getCompiler = function () {\n            var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n            return compilerFactory.createCompiler([\n                { providers: [{ provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }] }\n            ]);\n        };\n        /**\n         * Render an HTML document for a specific URL with specified\n         * render options\n         */\n        CommonEngine.prototype.render = function (opts) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var doc, _a, extraProviders, factory;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = opts.document;\n                            if (_a) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.getDocument(opts.documentFilePath)];\n                        case 1:\n                            _a = (_b.sent());\n                            _b.label = 2;\n                        case 2:\n                            doc = _a;\n                            extraProviders = tslib_1.__spread((opts.providers || []), (this.providers || []), [\n                                { provide: SERVER_CONTEXT, useValue: JSON.parse(opts.context) },\n                                {\n                                    provide: platformServer.INITIAL_CONFIG,\n                                    useValue: {\n                                        document: doc,\n                                        url: opts.url\n                                    }\n                                }\n                            ]);\n                            return [4 /*yield*/, this.getFactory()];\n                        case 3:\n                            factory = _b.sent();\n                            return [2 /*return*/, platformServer.renderModuleFactory(factory, { extraProviders: extraProviders })];\n                    }\n                });\n            });\n        };\n        /** Return the factory for a given engine instance */\n        CommonEngine.prototype.getFactory = function () {\n            var _this = this;\n            // If module has been compiled AoT\n            var moduleOrFactory = this.moduleOrFactory;\n            if (moduleOrFactory instanceof core.NgModuleFactory) {\n                return Promise.resolve(moduleOrFactory);\n            }\n            else {\n                // we're in JIT mode\n                var moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n                // If module factory is cached\n                if (moduleFactory) {\n                    return Promise.resolve(moduleFactory);\n                }\n                // Compile the module and cache it\n                return this.getCompiler().compileModuleAsync(moduleOrFactory)\n                    .then(function (factory) {\n                    _this.factoryCacheMap.set(moduleOrFactory, factory);\n                    return factory;\n                });\n            }\n        };\n        /** Retrieve the document from the cache or the filesystem */\n        CommonEngine.prototype.getDocument = function (filePath) {\n            var doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n                fs.readFileSync(filePath).toString();\n            // As  promise so we can change the API later without breaking\n            return Promise.resolve(doc);\n        };\n        return CommonEngine;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    function startSocketEngine(moduleOrFactory, providers, host, port) {\n        var _this = this;\n        if (providers === void 0) { providers = []; }\n        if (host === void 0) { host = 'localhost'; }\n        if (port === void 0) { port = 9090; }\n        return new Promise(function (resolve, _reject) {\n            var engine = new CommonEngine(moduleOrFactory, providers);\n            var server = net.createServer(function (socket) {\n                socket.on('data', function (buff) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    var message, renderOptions, html, error_1;\n                    return tslib_1.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                message = buff.toString();\n                                renderOptions = JSON.parse(message);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 3, , 4]);\n                                return [4 /*yield*/, engine.render(renderOptions)];\n                            case 2:\n                                html = _a.sent();\n                                socket.write(JSON.stringify({ html: html, id: renderOptions.id }));\n                                return [3 /*break*/, 4];\n                            case 3:\n                                error_1 = _a.sent();\n                                // send the error down to the client then rethrow it\n                                socket.write(JSON.stringify({ html: null,\n                                    id: renderOptions.id, error: error_1.toString() }));\n                                return [3 /*break*/, 4];\n                            case 4: return [2 /*return*/];\n                        }\n                    });\n                }); });\n            });\n            server.listen(port, host);\n            resolve({ close: function () { return server.close(); } });\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.startSocketEngine = startSocketEngine;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=socket-engine.umd.js.map\n"]}