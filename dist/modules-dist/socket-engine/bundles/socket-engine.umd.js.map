{"version":3,"file":"socket-engine.umd.js","sources":["../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/private_api.ts","../../../../../../modules/common/engine/public_api.ts","../../../../../../modules/common/engine/index.ts","../../../../../modules/socket-engine/src/main.ts","../../../../../modules/socket-engine/public_api.ts","../../../../../modules/socket-engine/index.ts","../../../../../modules/socket-engine/socket-engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Compiler, Type, NgModuleFactory, CompilerFactory, StaticProvider, InjectionToken} from '@angular/core';\nimport {INITIAL_CONFIG, renderModuleFactory, platformDynamicServer} from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport {FileLoader} from './file-loader';\nimport {RenderOptions} from './interfaces';\n\nexport const SERVER_CONTEXT: InjectionToken<any> = new InjectionToken<any>('SERVER_CONTEXT');\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts!.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {provide: SERVER_CONTEXT, useValue: JSON.parse(opts.context)},\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const factory = await this.getFactory();\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  getFactory(): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    const moduleOrFactory = this.moduleOrFactory;\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return Promise.resolve(moduleOrFactory);\n    } else {\n      // we're in JIT mode\n      let moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return Promise.resolve(moduleFactory);\n      }\n\n      // Compile the module and cache it\n      return this.getCompiler().compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          this.factoryCacheMap.set(moduleOrFactory, factory);\n          return factory;\n        });\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ÉµFileLoader, CommonEngine as ÉµCommonEngine,\n  RenderOptions as ÉµRenderOptions, SERVER_CONTEXT } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ÉµCommonEngine as CommonEngine,\n  ÉµRenderOptions as RenderOptions } from '@nguniversal/common/engine';\nimport { NgModuleFactory, Type, StaticProvider } from '@angular/core';\nimport * as net from 'net';\n\nexport interface SocketEngineServer {\n  close: () => void;\n}\n\nexport interface SocketEngineRenderOptions extends RenderOptions {\n  id: number;\n}\n\nexport interface SocketEngineResponse {\n  id: number;\n  html: string|null;\n  error?: Error;\n}\n\nexport function startSocketEngine(\n  moduleOrFactory: Type<{}> | NgModuleFactory<{}>,\n  providers: StaticProvider[] = [],\n  host = 'localhost',\n  port = 9090\n): Promise<SocketEngineServer> {\n  return new Promise((resolve, _reject) => {\n    const engine = new CommonEngine(moduleOrFactory, providers);\n\n    const server = net.createServer(socket => {\n      socket.on('data', async buff => {\n        const message = buff.toString();\n        const renderOptions = JSON.parse(message) as SocketEngineRenderOptions;\n        try {\n          const html = await engine.render(renderOptions);\n          socket.write(JSON.stringify({html, id: renderOptions.id} as SocketEngineResponse));\n        } catch (error) {\n          // send the error down to the client then rethrow it\n          socket.write(JSON.stringify({html: null,\n            id: renderOptions.id, error: error.toString()} as SocketEngineResponse));\n        }\n      });\n    });\n\n    server.listen(port, host);\n    resolve({close: () => server.close()});\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { startSocketEngine, SocketEngineResponse, SocketEngineRenderOptions } from './src/main';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","InjectionToken","platformDynamicServer","CompilerFactory","ResourceLoader","INITIAL_CONFIG","renderModuleFactory","NgModuleFactory","fs.readFileSync","net.createServer"],"mappings":"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"}